# -*- coding: utf-8 -*-
"""Diabaties_KNN .ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/17pZ-v6dKwHZH3xM5JO8Q8GF73kjrkutc
"""

import pandas as pd
import numpy as np
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler
from sklearn.neighbors import KNeighborsClassifier
from sklearn.metrics import f1_score, accuracy_score, confusion_matrix

dataset = pd.read_csv('diabetes.csv')
print(len(dataset))
print(dataset.head)

"""Values of coloums like gulocose , Blood Pressure cannot be accepted as zero beacause it will accept the that outcomes when we replace such values with the mean of respective column"""

zero_not_accepted = ['Glucose','BloodPressure','SkinThickness','Insulin','BMI']

for column in zero_not_accepted:
    dataset[column] = dataset[column].replace(0, np.nan)
    mean = int(dataset[column].mean(skipna=True))
    dataset[column] = dataset[column].replace(np.nan,mean)

print(dataset['Insulin'])

x = dataset.iloc[:,0:8]
y = dataset.iloc[:,8]
x_train,x_test,y_train,y_test = train_test_split(x,y,random_state=0,test_size=0.2)

"""feature Scaling"""

sc_x = StandardScaler()
x_train = sc_x.fit_transform(x_train)
x_test = sc_x.transform(x_test)

"""Define the model using K NeighbourClassifier and fit the train data in the model"""

import math
math.sqrt(len(y_test))

Classifier = KNeighborsClassifier(n_neighbors=11,p=2,metric='euclidean')

Classifier.fit(x_train,y_train)

# predict the test set result
y_pred = Classifier.predict(x_test)
y_pred

cm = confusion_matrix(y_test,y_pred)
print(cm)

print(f1_score(y_test,y_pred))
print(accuracy_score(y_test,y_pred))